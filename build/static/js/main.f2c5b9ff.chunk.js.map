{"version":3,"sources":["Components/Tabs/Home.js","Login.js","Registration.js","Components/Tabs/Register.js","Event.js","Search.js","NewEvent.js","Components/Tabs/Diagram.js","Components/Tabs/Contact.js","Components/Tabs/About.js","AdminLogin.js","Components/Tabs/Admin.js","Components/TabManager.js","App.js","reportWebVitals.js","index.js"],"names":["Home","src","alt","Login","updateInfo","event","fieldName","target","name","fieldValue","value","setState","username","password","login","e","state","fetch","method","headers","body","JSON","stringify","then","response","json","data","window","alert","handleLogin","isLoggedIn","props","tryLogin","className","for","onChange","this","type","required","onClick","React","Component","Registration","fname","lname","register","firstname","lastname","Register","useState","loggedIn","setLoggedIn","receiveLogin","Event","id","eventName","day","registree","Search","searchQuery","setSearchQuery","action","autoComplete","placeholder","onInput","NewEvent","makeEvent","Diagram","search","location","query","URLSearchParams","get","evants","setEvants","useEffect","events","filteredevents","filter","evant","toLowerCase","includes","filterEvants","map","Contact","About","AdminLogin","Admin","TabManager","activeTab","setActiveTab","setIsLoggedIn","receivedLoggedIn","console","log","handleHome","handleRegister","handleContact","handleAbout","handleAdmin","href","App","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c5b9ff.chunk.js","sourcesContent":["function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to Sylvania International Community Center</h1>\r\n            <img src=\"communitycenter.jpg\" alt=\"Community Center\"></img>\r\n            <figcaption>Our Center</figcaption>\r\n            <p>At the Sylvania International Community Center, you can register any event! Explore our website to find numerous possibilities!</p>\r\n            <p><strong>Login/Register</strong> allows you to login to a pre-existing account or to register for an account. You must have an account to register an event.</p>\r\n            <p><strong>Contact Us</strong> Any questions? Please contact us!</p>\r\n            <p><strong>About us</strong> Find out more about our history that is totally NOT made up!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\n\nexport default class Login extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            username:'',\n            password:'',\n        };\n        //default information is null\n    }\n    updateInfo = (event) =>{\n            let fieldName = event.target.name;\n            let fieldValue = event.target.value;\n            if(fieldName === 'username') {\n                this.setState({username:fieldValue});\n            }\n            else if(fieldName === 'password'){\n                this.setState({password:fieldValue});\n            }\n            //updates variables when user updates the information\n    };\n    login=(e)=>{\n        let {username,password}=this.state;\n        fetch('/login', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username:username,\n                password:password,\n            })\n        })\n        //fetches login from server.js\n        .then(response=>response.json())\n        .then(data=>{\n            if(data) {\n                window.alert(\"You have successfully logged in. You can now access the events tab to join or create an event.\")\n                this.handleLogin(data)\n            }\n            else window.alert(\"Try Again. Either your username or password is incorrect.\")\n        })\n        //shoots the user a message saying if their login was successful or not\n    }\n    handleLogin = (isLoggedIn) => {\n        this.props.tryLogin(isLoggedIn);\n    }\n    render(){\n        return(\n            <div className=\"login\">\n                <label for=\"username\">Username:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"username\" value={this.state.username} required/><br /><br />\n                <label for=\"password\">Password:</label>\n                <input onChange={this.updateInfo} type=\"password\" name=\"password\" value={this.state.password} required/><br /><br />\n                <button onClick={this.login}>Login</button>\n            </div>\n        )\n        //HTML for the form\n    }\n}\n","import React from 'react';\n\nexport default class Registration extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            username:'',\n            password:'',\n            fname:'',\n            lname:'',\n        };\n        //sets default information as null, will be updated when user types information\n    }\n    updateInfo = (event) =>{\n            let fieldName = event.target.name;\n            let fieldValue = event.target.value;\n            if(fieldName === 'username') {\n                this.setState({username:fieldValue});\n            }\n            else if(fieldName === 'password'){\n                this.setState({password:fieldValue});\n            }\n            else if(fieldName === 'fname'){\n                this.setState({fname:fieldValue});\n            }\n            else if(fieldName === 'lname'){\n                this.setState({lname:fieldValue});\n            }\n            //sets field values/variables when user inputs information\n    };\n    register=(e)=>{\n        let {username,password,fname,lname}=this.state;\n        fetch('/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username:username,\n                password:password,\n                firstname:fname,\n                lastname:lname,\n            })\n        })\n        //fetches register\n        .then(response=>response.json())\n        .then(data=>{\n            window.alert(\"Successful registration!\")\n        })\n    }\n    render(){\n        return(\n            <div className=\"register\">\n                <label for=\"username\">Username:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"username\" value={this.state.username} required/><br /><br />\n                <label for=\"password\">Password:</label>\n                <input onChange={this.updateInfo} type=\"password\" name=\"password\" value={this.state.password} required/><br /><br />\n                <label for=\"fname\">First Name:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"fname\" value={this.state.fname} required/><br /><br />\n                <label for=\"lname\">Last Name:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"lname\" value={this.state.lname} required/><br /><br />\n                <button onClick={this.register}>Register</button>\n            </div>\n        )\n        //HTML for the Registration\n    }\n}","import React, {useState} from 'react'\r\n//imports useState\r\nimport Login from '../../Login.js'\r\n//imports Login.js from the src folder\r\nimport Registration from '../../Registration.js'\r\n//imports Registration.js from the src folder\r\n\r\nfunction Register(props) {\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n    //creates variable using useState\r\n    \r\n    return (\r\n        <div>\r\n            <h3>New Here? Register!</h3>\r\n            <Registration />\r\n            {/* Uses Registration component, allows user to actually register*/}\r\n            <h3>Login!</h3>\r\n            <Login tryLogin={setLoggedIn}/>\r\n            {props.receiveLogin(loggedIn)}\r\n            {/* Uses Login component, allows user to actually login*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","function Event({id, eventName, day, registree}) {\r\n    return (\r\n        <div>\r\n            <table id= \"eventTable\">\r\n               <tr>\r\n                   <td id=\"eventName\">{eventName}</td>\r\n                   <td id=\"eventDay\">{day}</td>\r\n                   <td id=\"eventRegistree\">{registree}</td>\r\n               </tr>\r\n               {/*Takes in Event information to make it a table*/}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Event","import React from 'react'\n\nfunction Search({searchQuery, setSearchQuery}) {\n    return (\n        <div>\n            <form\n                action = \"/\"\n                method = \"get\"\n                autoComplete = \"off\"\n            >\n                <div><input placeholder = \"search\" value = {searchQuery} onInput = {e => setSearchQuery(e.target.value)} type = \"text\" id =\"search\"></input></div>\n            <br></br>\n            </form>\n        </div>\n    )\n    //when user types information to find things in Diagram.js, things will be located\n}\n\nexport default Search\n","import React from 'react';\n\nexport default class NewEvent extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            eventName:'',\n            day:'',\n        };\n        //sets default information to null\n    }\n    updateInfo = (event) =>{\n            let fieldName = event.target.name;\n            let fieldValue = event.target.value;\n            if(fieldName === 'eventName') {\n                this.setState({eventName:fieldValue});\n            }\n            else if(fieldName === 'date'){\n                this.setState({day:fieldValue});\n            }\n            //updates information whenever user inputs information\n    };\n    makeEvent=(e)=>{\n        let {eventName, day}=this.state;\n        fetch('/makeEvent', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                eventName:eventName,\n                day:day\n            })\n        })\n        //fetchs makeEvent from the server.js file\n        .then(response=>response.json())\n        .then(data=>{\n            window.alert(\"You have successfully made your desired event.\")\n        })\n        //if the user makes an evenet this will send through\n    }\n    render(){\n        return(\n            <div className=\"makeEvent\">\n                <label for=\"eventName\">Your Event's Name:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"eventName\" value={this.state.eventName} required/><br /><br />\n                <label for=\"date\">Your Event's Date:</label>\n                <input onChange={this.updateInfo} type=\"date\" name=\"date\" value={this.state.password} required/><br /><br />\n                <button onClick={this.makeEvent}>Create This Event</button>\n            </div>\n            //html for the NewEvent\n        )\n    }\n}","import React, {useState, useEffect} from 'react'\r\n//imports useState & useEffect\r\nimport Event from '../../Event';\r\n//imports Event.js from the src folder\r\nimport Search from '../../Search';\r\n//imports Search.js from the src folder\r\nimport NewEvent from '../../NewEvent';\r\n//imports NewEvent.js from the src folder\r\n\r\n//If you see evants, do not worry. Evant(s) is our way of spelling event(s).\r\nfunction Diagram() {\r\n    const {search} = window.location;\r\n    const query = new URLSearchParams(search).get('s');\r\n\r\n    const [evants, setEvants] = useState([{ id: 0, eventName: 'Chris Mas', day: '12/25/2022', registree: '1' }])\r\n    //creates fake data in order to use the database; briefly seen\r\n\r\n    useEffect(() => {\r\n        fetch('/events')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                setEvants(data.events)\r\n            })\r\n    }, [])\r\n    //replaces the fake data with the real data\r\n\r\n    const filterEvants = (evants, query) => {\r\n        if (!query) { return evants }\r\n\r\n        return evants.filter((evant) => {\r\n            const eventName = evant.eventName.toLowerCase()\r\n            return eventName.includes(query.toLowerCase())\r\n        })\r\n    }\r\n    //filters out the events\r\n\r\n    const [searchQuery, setSearchQuery] = useState(query || '')\r\n    const filteredevents = filterEvants(evants, searchQuery)\r\n    //creates variables that uses methods from above and will be used in return()\r\n\r\n    return (\r\n        <div>\r\n            <Search \r\n                searchQuery = {searchQuery}\r\n                setSearchQuery = {setSearchQuery}\r\n            />\r\n            {/* uses the component function and passes two variables*/}\r\n            \r\n            <table id = \"eventTable\">\r\n                <tr>\r\n                    <th id=\"eventName\">Event Name</th>\r\n                    <th id=\"eventDay\">Day</th>\r\n                    <th id=\"eventRegistree\">Registree</th>\r\n                </tr>\r\n                {/*Creates header*/}\r\n                <tr>\r\n                    {filteredevents.map((evant) =>\r\n                        <Event\r\n                            id = {evant.id}\r\n                            eventName = {evant.eventName}\r\n                            day = {evant.day}\r\n                            registree = {evant.registree}\r\n                        />)}\r\n                </tr>\r\n                {/*Filters the events and uses the Event component to create table cells*/}\r\n            </table>\r\n            <NewEvent />\r\n            {/*uses the NewEvent component*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Diagram\r\n","function Contact() {\r\n    return (\r\n        <div>\r\n            <h1>Contact Us!</h1>\r\n            <h2>EMAIL : sylicc@gmail.com</h2>\r\n            <h2>TWITTER : @SICC</h2>\r\n            <h2>FACEBOOK : Sylvania International Convention Center</h2>\r\n            <h2>INSTAGRAM : @SICC</h2>\r\n            <br></br>\r\n            <br></br>\r\n            <h3>Let us know if you have any questions about our convention center and/or any problems that you have!</h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","export default function About() {\r\n    return (\r\n        <div>\r\n            <p>The Sylvania International Convention Center or SICC is the premier event venue location in the greater Sylvania Area. SICC boasts the greatest capacity of any convention center within 80 miles and is equipped to handle a wide variety of events from conferences and dinners, to concerts and festivals. Founded in 1904 by Christopher Wood, SICC has aimed to foster connections between local Sylvanians and people from around the world through memorable experiences for over 100 years. Since its humble beginnings in an abandoned barn, SICC has steadily renovated and expanded into the world renowned 1024 square meter complex which it inhabits today. Over the years, SICC has hosted many iconic performers and events including The Beatles in 1967 and former Ohio governor Michalle DiSalle’s victory speech in 1958. With experienced staff and top-of-the-line equipment, any event hosted at SICC is sure to be a massive success. We hope you choose the Sylvania International Convention Center to host your next event! </p>\r\n        </div>\r\n        //SICC About Page\r\n    )\r\n}\r\n","import React from \"react\";\n//imports React to use React.Component\n\nexport default class AdminLogin extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n        };\n        //makes the default variables null before being filled in\n    }\n    updateInfo = (event) => {\n        let fieldName = event.target.name;\n        let fieldValue = event.target.value;\n        if (fieldName === 'username') {\n            this.setState({ username: fieldValue });\n        }\n        else if (fieldName === 'password') {\n            this.setState({ password: fieldValue });\n        }\n    };\n    //when information is updated, this is called and used to update variables\n\n    login = (e) => {\n        let { username, password } = this.state;\n        fetch('/adminlogin', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            })\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data) {\n                    window.alert(\"Success! You have logged in as admin.\")\n                }\n                else window.alert(\"Try again. Your admin username or password is incorrect.\")\n            })\n    }\n    //when the login button is clicked, checks if username, password, and isAdmin are correct/true\n    render() {\n        return (\n            <div className=\"adminLogin\">\n                <label for=\"username\">Username:</label>\n                <input onChange={this.updateInfo} type=\"text\" name=\"username\" value={this.state.username} required /><br /><br />\n                <label for=\"password\">Password:</label>\n                <input onChange={this.updateInfo} type=\"password\" name=\"password\" value={this.state.password} required /><br /><br />\n                <button onClick={this.login}>Login</button>\n            </div>\n            //html for the admin Login form\n        )\n    }\n}","import AdminLogin from '../../AdminLogin.js'\n//imports AdminLogin.js from the src folder\n\nfunction Admin() {\n    return (\n        <div>\n            <AdminLogin/>\n        </div>\n        //uses the AdminLogin component\n    )\n}\n\nexport default Admin","import React, { useState } from \"react\";\r\n//imports useState\r\nimport Home from \"./Tabs/Home\";\r\n//imports Home.js from the Tabs folder\r\nimport Register from \"./Tabs/Register\";\r\n//imports Register.js from the Tabs folder\r\nimport Diagram from \"./Tabs/Diagram\";\r\n//imports Diagram.js from the Tabs folder\r\nimport Contact from \"./Tabs/Contact\";\r\n//imports Contact.js from the Tabs folder\r\nimport About from \"./Tabs/About\";\r\n//imports About.js from the Tabs folder\r\nimport Admin from \"./Tabs/Admin\";\r\n//imports Admin.js from the Admin folder\r\n\r\nfunction TabManager() {\r\n    const [activeTab, setActiveTab] = useState(<Home />);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    //creates variables using useState, makes home default and isLoggedIn is false\r\n\r\n    const receiveLogin = (receivedLoggedIn) => {\r\n        console.log(\"value received from Register.js\", receivedLoggedIn)\r\n        setIsLoggedIn(receivedLoggedIn)\r\n    }\r\n    //when logged in, sets LoggedIn as true\r\n\r\n    const handleHome = () => {\r\n        setActiveTab(<Home />)\r\n    }\r\n    const handleRegister = () => {\r\n        setActiveTab(<Register receiveLogin={receiveLogin} />)\r\n    }\r\n    const handleDiagram = () => {\r\n        setActiveTab(<Diagram />)\r\n    }\r\n    const handleContact = () => {\r\n        setActiveTab(<Contact />)\r\n    }\r\n    const handleAbout = () => {\r\n        setActiveTab(<About />)\r\n    }\r\n    const handleAdmin = () => {\r\n        setActiveTab(<Admin />)\r\n    }\r\n    //are used when something is clicked\r\n\r\n    if (isLoggedIn) {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <ul>\r\n                        <li><a href=\"home\" onClick={handleHome}>Home</a></li>\r\n                        <li><a href=\"#register\" onClick={handleRegister}>Login/Register</a></li>\r\n                        <li><a href=\"#diagram\" onClick={handleDiagram}>Events</a></li> {/*CHANGE THIS LATER!!*/}\r\n                        <li><a href=\"#contact\" onClick={handleContact}>Contact Us</a></li>\r\n                        <li><a href=\"#about\" onClick={handleAbout}>About Us</a></li>\r\n                        <li><a href=\"#adminlogin\" onClick={handleAdmin}>Admin Login</a></li>\r\n                    </ul>\r\n                </header>\r\n                <body>\r\n                    {activeTab}\r\n                </body>\r\n            </div>\r\n        )\r\n    }\r\n    //gives user access to certain tabs if loggedIn\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <ul>\r\n                        <li><a href=\"home\" onClick={handleHome}>Home</a></li>\r\n                        <li><a href=\"#register\" onClick={handleRegister}>Login/Register</a></li>\r\n                        <li><a href=\"#contact\" onClick={handleContact}>Contact Us</a></li>\r\n                        <li><a href=\"#about\" onClick={handleAbout}>About Us</a></li>\r\n                        <li><a href=\"#adminlogin\" onClick={handleAdmin}>Admin Login</a></li>\r\n                    </ul>\r\n                    {/*HTML for the navbar*/}\r\n                </header>\r\n                <body>\r\n                    {activeTab}\r\n                    {/*The actual tab*/}\r\n                </body>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabManager\r\n","import './App.css';\n//imports App.css\nimport React from 'react';\n//imports React\nimport TabManager from './Components/TabManager.js';\n//imports TabMananger from the Components folder\n\nfunction App() {\n  return (\n    <div>     \n      <header>\n        {/*Sylvania International Convention Center Logo & Title*/}\n        <a href=\"home\" class=\"logo\">SICC</a><br/>\n        <h1 id=\"title\">Sylvania International Convention Center</h1>\n      </header>\n      <body>\n          <TabManager />\n          {/*Tab Manager component*/}\n      </body>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}